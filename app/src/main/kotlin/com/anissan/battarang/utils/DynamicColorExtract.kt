@file:Suppress("Unused")

package com.anissan.battarang.utils

import android.content.Context
import com.google.android.material.color.MaterialColors

enum class Mode { LIGHT, DARK }

/**
 * Prints the current dynamic colors generated by the system as XML Color Resources to Logcat.
 * It can be copied to `res/values/colors.xml` file and used
 * as the default theme color on the unsupported devices.
 *
 * Set the device theme to the desired color and light / dark mode from "Wallpaper & Style",
 * then call this function on MainActivity::onCreate with the current mode.
 */
fun Context.extractDynamicColorsFromDevice(mode: Mode) {
  logI { "Go to `Configure Logcat Formatting Options` and `Modify Views` to keep the messages only." }

  mapOf(
    "primary" to com.google.android.material.R.attr.colorPrimary,
    "onPrimary" to com.google.android.material.R.attr.colorOnPrimary,
    "primaryContainer" to com.google.android.material.R.attr.colorPrimaryContainer,
    "onPrimaryContainer" to com.google.android.material.R.attr.colorOnPrimaryContainer,
    "primaryFixed" to com.google.android.material.R.attr.colorPrimaryFixed,
    "onPrimaryFixed" to com.google.android.material.R.attr.colorOnPrimaryFixed,
    "primaryFixedDim" to com.google.android.material.R.attr.colorPrimaryFixedDim,
    "onPrimaryFixedVariant" to com.google.android.material.R.attr.colorOnPrimaryFixedVariant,
    "primaryInverse" to com.google.android.material.R.attr.colorPrimaryInverse,

    "secondary" to com.google.android.material.R.attr.colorSecondary,
    "onSecondary" to com.google.android.material.R.attr.colorOnSecondary,
    "secondaryContainer" to com.google.android.material.R.attr.colorSecondaryContainer,
    "onSecondaryContainer" to com.google.android.material.R.attr.colorOnSecondaryContainer,
    "secondaryFixed" to com.google.android.material.R.attr.colorSecondaryFixed,
    "onSecondaryFixed" to com.google.android.material.R.attr.colorOnSecondaryFixed,
    "secondaryFixedDim" to com.google.android.material.R.attr.colorSecondaryFixedDim,
    "onSecondaryFixedVariant" to com.google.android.material.R.attr.colorOnSecondaryFixedVariant,

    "tertiary" to com.google.android.material.R.attr.colorTertiary,
    "onTertiary" to com.google.android.material.R.attr.colorOnTertiary,
    "tertiaryContainer" to com.google.android.material.R.attr.colorTertiaryContainer,
    "onTertiaryContainer" to com.google.android.material.R.attr.colorOnTertiaryContainer,
    "tertiaryFixed" to com.google.android.material.R.attr.colorTertiaryFixed,
    "onTertiaryFixed" to com.google.android.material.R.attr.colorOnTertiaryFixed,
    "tertiaryFixedDim" to com.google.android.material.R.attr.colorTertiaryFixedDim,
    "onTertiaryFixedVariant" to com.google.android.material.R.attr.colorOnTertiaryFixedVariant,

    "error" to com.google.android.material.R.attr.colorError,
    "errorContainer" to com.google.android.material.R.attr.colorErrorContainer,
    "onError" to com.google.android.material.R.attr.colorOnError,
    "onErrorContainer" to com.google.android.material.R.attr.colorOnErrorContainer,

    "outline" to com.google.android.material.R.attr.colorOutline,
    "outlineVariant" to com.google.android.material.R.attr.colorOutlineVariant,

    "background" to android.R.attr.colorBackground,
    "onBackground" to com.google.android.material.R.attr.colorOnBackground,

    "surface" to com.google.android.material.R.attr.colorSurface,
    "onSurface" to com.google.android.material.R.attr.colorOnSurface,
    "surfaceDim" to com.google.android.material.R.attr.colorSurfaceDim,
    "surfaceBright" to com.google.android.material.R.attr.colorSurfaceBright,
    "surfaceVariant" to com.google.android.material.R.attr.colorSurfaceVariant,
    "onSurfaceVariant" to com.google.android.material.R.attr.colorOnSurfaceVariant,
    "surfaceInverse" to com.google.android.material.R.attr.colorSurfaceInverse,
    "onSurfaceInverse" to com.google.android.material.R.attr.colorOnSurfaceInverse,

    "surfaceContainer" to com.google.android.material.R.attr.colorSurfaceContainer,
    "surfaceContainerLow" to com.google.android.material.R.attr.colorSurfaceContainerLow,
    "surfaceContainerLowest" to com.google.android.material.R.attr.colorSurfaceContainerLowest,
    "surfaceContainerHigh" to com.google.android.material.R.attr.colorSurfaceContainerHigh,
    "surfaceContainerHighest" to com.google.android.material.R.attr.colorSurfaceContainerHighest,
  ).forEach { (colorRole, colorAttr) ->
    logColorResource(mode.name.lowercase(), colorRole, colorAttr)
  }
}

private fun Context.logColorResource(mode: String, colorRole: String, colorAttr: Int) {
  val colorHex = String.format("#%06X", 0xFFFFFF and MaterialColors.getColor(this, colorAttr, 0))

  logI {
    """<color name="md_theme_${mode}_${colorRole}">$colorHex</color>"""
  }
}
